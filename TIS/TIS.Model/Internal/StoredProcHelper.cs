//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace TIS.Model.Internal
{
    public static class SprocHelper
    {
        public static DevExpress.Xpo.DB.SelectedData Execsp_helpdiagramdefinition(Session session, string diagramname, int owner_id)
        {
            return session.ExecuteSproc("sp_helpdiagramdefinition", new OperandValue(diagramname), new OperandValue(owner_id));
        }
        public static System.Collections.Generic.ICollection<sp_helpdiagramdefinitionResult> Execsp_helpdiagramdefinitionIntoObjects(Session session, string diagramname, int owner_id)
        {
            return session.GetObjectsFromSproc<sp_helpdiagramdefinitionResult>("sp_helpdiagramdefinition", new OperandValue(diagramname), new OperandValue(owner_id));
        }
        public static XPDataView Execsp_helpdiagramdefinitionIntoDataView(Session session, string diagramname, int owner_id)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("sp_helpdiagramdefinition", new OperandValue(diagramname), new OperandValue(owner_id));
            return new XPDataView(session.Dictionary, session.GetClassInfo(typeof(sp_helpdiagramdefinitionResult)), sprocData);
        }
        public static void Execsp_helpdiagramdefinitionIntoDataView(XPDataView dataView, Session session, string diagramname, int owner_id)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("sp_helpdiagramdefinition", new OperandValue(diagramname), new OperandValue(owner_id));
            dataView.PopulateProperties(session.GetClassInfo(typeof(sp_helpdiagramdefinitionResult)));
            dataView.LoadData(sprocData);
        }
        public static DevExpress.Xpo.DB.SelectedData Execsp_helpdiagrams(Session session, string diagramname, int owner_id)
        {
            return session.ExecuteSproc("sp_helpdiagrams", new OperandValue(diagramname), new OperandValue(owner_id));
        }
        public static System.Collections.Generic.ICollection<sp_helpdiagramsResult> Execsp_helpdiagramsIntoObjects(Session session, string diagramname, int owner_id)
        {
            return session.GetObjectsFromSproc<sp_helpdiagramsResult>("sp_helpdiagrams", new OperandValue(diagramname), new OperandValue(owner_id));
        }
        public static XPDataView Execsp_helpdiagramsIntoDataView(Session session, string diagramname, int owner_id)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("sp_helpdiagrams", new OperandValue(diagramname), new OperandValue(owner_id));
            return new XPDataView(session.Dictionary, session.GetClassInfo(typeof(sp_helpdiagramsResult)), sprocData);
        }
        public static void Execsp_helpdiagramsIntoDataView(XPDataView dataView, Session session, string diagramname, int owner_id)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("sp_helpdiagrams", new OperandValue(diagramname), new OperandValue(owner_id));
            dataView.PopulateProperties(session.GetClassInfo(typeof(sp_helpdiagramsResult)));
            dataView.LoadData(sprocData);
        }
        public static DevExpress.Xpo.DB.SelectedData ExecTurnOverCustomerAscending(Session session)
        {
            return session.ExecuteSproc("TurnOverCustomerAscending");
        }
        public static System.Collections.Generic.ICollection<TurnOverCustomerAscendingResult> ExecTurnOverCustomerAscendingIntoObjects(Session session)
        {
            return session.GetObjectsFromSproc<TurnOverCustomerAscendingResult>("TurnOverCustomerAscending");
        }
        public static XPDataView ExecTurnOverCustomerAscendingIntoDataView(Session session)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("TurnOverCustomerAscending");
            return new XPDataView(session.Dictionary, session.GetClassInfo(typeof(TurnOverCustomerAscendingResult)), sprocData);
        }
        public static void ExecTurnOverCustomerAscendingIntoDataView(XPDataView dataView, Session session)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("TurnOverCustomerAscending");
            dataView.PopulateProperties(session.GetClassInfo(typeof(TurnOverCustomerAscendingResult)));
            dataView.LoadData(sprocData);
        }
        public static DevExpress.Xpo.DB.SelectedData ExecTurnOverCustomerDescending(Session session)
        {
            return session.ExecuteSproc("TurnOverCustomerDescending");
        }
        public static System.Collections.Generic.ICollection<TurnOverCustomerAscendingResult> ExecTurnOverCustomerDescendingIntoObjects(Session session)
        {
            return session.GetObjectsFromSproc<TurnOverCustomerAscendingResult>("TurnOverCustomerDescending");
        }
        public static XPDataView ExecTurnOverCustomerDescendingIntoDataView(Session session)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("TurnOverCustomerDescending");
            return new XPDataView(session.Dictionary, session.GetClassInfo(typeof(TurnOverCustomerAscendingResult)), sprocData);
        }
        public static void ExecTurnOverCustomerDescendingIntoDataView(XPDataView dataView, Session session)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("TurnOverCustomerDescending");
            dataView.PopulateProperties(session.GetClassInfo(typeof(TurnOverCustomerAscendingResult)));
            dataView.LoadData(sprocData);
        }
        public static DevExpress.Xpo.DB.SelectedData ExecVehicleNotRacedByPeriode(Session session, DateTime Date)
        {
            return session.ExecuteSproc("VehicleNotRacedByPeriode", new OperandValue(Date));
        }
        public static System.Collections.Generic.ICollection<VehicleNotRacedByPeriodeResult> ExecVehicleNotRacedByPeriodeIntoObjects(Session session, DateTime Date)
        {
            return session.GetObjectsFromSproc<VehicleNotRacedByPeriodeResult>("VehicleNotRacedByPeriode", new OperandValue(Date));
        }
        public static XPDataView ExecVehicleNotRacedByPeriodeIntoDataView(Session session, DateTime Date)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("VehicleNotRacedByPeriode", new OperandValue(Date));
            return new XPDataView(session.Dictionary, session.GetClassInfo(typeof(VehicleNotRacedByPeriodeResult)), sprocData);
        }
        public static void ExecVehicleNotRacedByPeriodeIntoDataView(XPDataView dataView, Session session, DateTime Date)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("VehicleNotRacedByPeriode", new OperandValue(Date));
            dataView.PopulateProperties(session.GetClassInfo(typeof(VehicleNotRacedByPeriodeResult)));
            dataView.LoadData(sprocData);
        }
    }
}
